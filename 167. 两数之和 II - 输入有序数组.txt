给定一个已按照升序排列 的有序数组，找到两个数使得它们相加之和等于目标数。

函数应该返回这两个下标值 index1 和 index2，其中 index1 必须小于 index2。请注意，返回的下标值（index1 和 index2）不是从零开始的。

你可以假设每个输入都只有一个解决方案，而且你不会重复使用相同的元素。

输入：数组 = {2, 7, 11, 15}, 目标数 = 9
输出：index1 = 1, index2 = 2


解决思路：
给定一个已按照升序排列 的有序数组，找到两个数使得它们相加之和等于目标数。

函数应该返回这两个下标值 index1 和 index2，其中 index1 必须小于 index2。请注意，返回的下标值（index1 和 index2）不是从零开始的。

你可以假设每个输入都只有一个解决方案，而且你不会重复使用相同的元素。

输入：数组 = {2, 7, 11, 15}, 目标数 = 9
输出：index1 = 1, index2 = 2



代码:
var twoSum = function(numbers, target) {
  var i = 0 , j = numbers.length-1;
  while(i<j){
    var d = numbers[i] + numbers[j] - target;
    if (d<0){
	  i++;
	}else if( d>0){
	  j--
	}else if(d == 0) {
	  return [i+1 ,j+1]
	}
  }
  return null;
};